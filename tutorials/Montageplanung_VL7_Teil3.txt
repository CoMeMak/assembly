[16]

Die Basisstruktur eines Roboterprogramms kann am einfachsten als sequenzieller Ablauf von Roboterfunktionen oder -aktionen dargestellt werden. Einen solchen Ablauf bezeichnet man auch als Workflow. Um sich dies besser vorstellen zu können, sollte man sich überlegen, was ein Roboter machen muss, um beispielsweise einen Gegenstand von einem Ort zu einem anderen zu transportieren. Dieser Vorgang wird in der Robotik oft als "Pick and Place" bezeichnet. Die Folie zeigt eine Beispieldarstellung eines "Pick and Place"-Vorganges, der aus mehreren Roboteraktionen besteht. Der Übergang von einer Aktion zur anderen wird durch zwei "größer als" Zeichen bezeichnet. Ein Roboter, der mit einem Fingergreifer ausgestattet ist, muss also zuerst oberhalb der Aufnahmestelle fahren, die Greiferbacken öffnen und dann zur Objektposition fahren, bevor die Greiferbacken wieder geschlossen werden, um das Objekt zu greifen. Anschließend fährt der Roboter zur vorherigen Position um dann oberhalb der Zielposition und schließlich zur Ablagestelle zu fahren und die Greiferbacken zu öffnen. Die räumlichen Positionen können entweder programmatisch definiert oder eingeteached werden. In beiden Fällen können sie in Programmvariablen festgehalten werden. Die unterstrichenen Bewegungsvorgänge bezeichnen genaue lineare Bewegungen. Im Gegensatz zu anderen, nichtlinearen Roboterbewegungen, sind lineare Bewegungen genauer. Man kann so, zum Beispiel, Halbleiterplatten und andere Werkstücke bestücken.  

[17]

Der nun programmierte Pick and Place Vorgang kann als wiederverwendbare Programmfunktion gekennzeichnet und in anderen Programme oder Programmabschnitte eingesetzt werden. Nun kann man etwa mittels einer Wiederholungsschleife die Funktion mehrmals (zum Beispiel 10 mal) ausführen, wie der Programmablauf auf der Folie zeigt. Man kann nun annehmen, dass nicht immer ein Objekt griffbereit an der Aufnahmestelle ist. Um dies zu überprüfen ist ein Sensor notwendig (zum Beispiel eine Kamera, ein Druck- oder Lasersensor), der ein Signal in eine Variable speichert. Diese Variable kann dann mittels einer Bedingungsstruktur (if-then-else) überprüft werden. Der Pick and Place Vorgang wird nur dann ausgeführt, wenn die Bedingung wahr ist, also wenn der Sensor einen Gegenstand detektiert. Wir werden dieses Beispiel gleich mittels einer webbasierten Roboterprogrammierumgebung umsetzen und abspielen. 

[19]

Multimodale Roboterprogrammierung ist ein Vorgang, bei welchem mehrere Ein- und Ausgabemodi verwendet werden, um einen Roboter zu programmieren. Neben den üblichen textuellen, mausgesteuerten und Berührungseingaben, die mittels einer Benutzeroberfläche möglich sind, kommen bei der multimodalen Programmierung beispielsweise auch der direkte Kontakte mit dem Roboter zum Einsatz. Dabei kann man den Roboterarm mit der Hand zu einer gewünschten Position führen, die anschließend durch ein Sprachbefehlt oder am Teach Pendant gespeichert werden kann. Der Roboter kann selbst auch ein haptisches oder akustisches Feedback geben, neben den üblichen Nachrichten, die in der Benutzeroberfläche angezeigt werden (etwa auf dem Teach Pendant oder auf einem Bildschirm). Eine weitere Kameraunterstützte Möglichkeit ist die der gestenbasierten Robotersteuerung und -programmierung. Dabei können vom Kamerasystem, das eine Gestenerkennungssoftware verwendet, bestimmte menschliche Gesten erkannt und mit bestimmten Roboterfunktionen in Verbindung gesetzt werden. Wie das Bild zeigt, kann die multimodale Robotersteuerung und -programmierung die Menschen bei Montageaufgaben entlasten. Auf der nächsten Folie befinden sich Links zu zwei Videos, die verschiedene Arten der multimodalen Programmierung demonstrieren. Bitte schauen Sie sich die Beiden Videos an. Versuchen Sie dabei die Unterschiede zur klassischen Programmierung sowie die Vor- und Nachteile der multimodalen Programmierung zu Identifizieren.
