[16]

Die Basisstruktur eines Roboterprogramms kann als sequenzieller Ablauf von Roboterfunktionen oder -aktionen dargestellt werden. Einen solchen Ablauf bezeichnet man auch als Workflow. Um sich das besser vorstellen zu können, sollte man sich überlegen, was ein Roboter machen muss, um beispielsweise einen Gegenstand von einem Ort zu einem anderen zu transportieren. Dieser Vorgang wird in der Robotik oft als "Pick and Place" bezeichnet. Die Folie zeigt eine Beispieldarstellung eines "Pick and Place"-Vorganges, der aus mehreren Roboteraktionen besteht. Der Übergang von einer Aktion zur anderen wird durch zwei "größer als" Symbole bezeichnet. Ein mit einem Backengreifer ausgestatteter Roboter muss zuerst oberhalb des Objektes fahren, die Greiferbacken öffnen und dann zur Objektposition fahren, bevor die Greiferbacken wieder geschlossen werden, um das Objekt zu greifen. Anschließend fährt der Roboter zur vorherigen Position, um dann oberhalb der Zielposition und schließlich zur Endposition zu fahren und die Greiferbacken zu öffnen. Die räumlichen Positionen können entweder programmatisch definiert oder eingeteached werden. In beiden Fällen können sie in Variablen festgehalten werden. Die unterstrichenen Bewegungsvorgänge bezeichnen lineare Bewegungen. Im Gegensatz zu anderen, nichtlinearen Roboterbewegungen, sind lineare Bewegungen genauer. Man kann so, zum Beispiel, Halbleiterplatten und andere Werkstücke bestücken.  

[17]

Der nun programmierte Pick and Place Vorgang kann in anderen Programmen oder Programmabschnitten verwendet werden. Nun kann man, beispielsweise mittels einer Wiederholungsschleife, die Funktion mehrmals ausführen, wie der Programmablauf auf der Folie zeigt. Man kann ebenfalls annehmen, dass sich ein Objekt nicht immer in der Greisposition befindet. Um dies zu überprüfen, ist ein Sensor notwendig (zum Beispiel eine Kamera), der ein Signal in eine Variable speichert. Diese Variable kann dann mittels einer Bedingungsstruktur überprüft werden. Der Pick and Place Vorgang wird nur dann ausgeführt, wenn die Bedingung wahr ist, also wenn der Sensor einen Gegenstand detektiert hat.  

[19]

Unter multimodale Roboterprogrammierung versteht man eine Art der Programmierung, bei der mehrere Ein- und Ausgabemodi verwendet werden können, um einen Roboter zu programmieren. Neben den üblichen textuellen, mausgesteuerten und Berührungseingaben, die mittels einer Benutzeroberfläche möglich sind, wird bei der multimodalen Programmierung oft auch der direkte Kontakte mit dem Roboter verwendet. Dabei kann man den Roboterarm mit der Hand zu einer gewünschten Position führen, die anschließend durch einen Sprachbefehlt oder mittels des Teach Pendants gespeichert werden kann. Der Roboter kann selbst auch ein haptisches oder akustisches Feedback geben, neben den üblichen Anzeige in der Benutzeroberfläche. Eine weitere Kameraunterstützte Möglichkeit ist die der gestenbasierten Robotersteuerung und -programmierung. Dabei können vom Kamerasystem, mittels einer spezialisierten Software, Gesten erkannt werden, wobie jede Geste eine Roboterfunktion ansteuert. Wie das Bild zeigt, kann die multimodale Robotersteuerung und -programmierung die Menschen bei Montageaufgaben entlasten. Auf der nächsten Folie befinden sich Links zu zwei Videos, die verschiedene Arten der multimodalen Programmierung demonstrieren. Bitte schauen Sie sich diese an und versuchen sie dabei die Unterschiede zur klassischen Programmierung sowie die Vor- und Nachteile der multimodalen Programmierung zusammenzufassen.
